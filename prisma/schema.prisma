// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  avatar        String?
  lastEntryDate DateTime?

  Profile   Profile  @relation(fields: [profileId], references: [id])
  profileId Int
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Person    Person[]
}

model Profile {
  id                Int                 @id @default(autoincrement())
  name              String
  icon              String?
  User              User[]
  PermissionProfile PermissionProfile[]
  status            Boolean             @default(true)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model PermissionProfile {
  id           Int        @id @default(autoincrement())
  Permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int
  Profile      Profile    @relation(fields: [profileId], references: [id])
  profileId    Int
  status       Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Permission {
  id                Int                 @id @default(autoincrement())
  name              String
  indicator         String?
  type              String?
  PermissionProfile PermissionProfile[]
  status            Boolean             @default(true)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model Person {
  id                     Int       @id @default(autoincrement())
  name                   String
  lastName               String?
  phone                  String[]
  birthDate              DateTime?
  gender                 Gender
  typeDocument           String?
  identificationDocument String?
  nationality            String?
  User                   User      @relation(fields: [userId], references: [id])
  userId                 Int
  status                 Boolean   @default(true)
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
}

enum Gender {
  FEMALE
  MALE
  OTHERS
}
